#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<windows.h>

typedef struct torre
{
	int discos[3];
	int cima;
}TTorre;

typedef struct pilha
{
	TTorre torres[3];	
}pPilha;

int start(pPilha *p)
{
	int x, disco;
	int nDisco = 3;
	
	system("cls");
	
	disco = nDisco;
	
	for(int y = 0; y < 3; y++)
	{
		for(x = 0; x < 3; x++)
		{
			if(y == 0)
			{
				p->torres[y].discos[x] = disco;
				disco--;
			}
			else
			{
				p->torres[y].discos[x] = 0;
			}			
		}	
	}
	
	p->torres[0].cima = nDisco-1;
	p->torres[1].cima = -1;
	p->torres[2].cima = -1;
	
	return nDisco;
}

void realizeJogada(TTorre *pOrig, TTorre *pDest)
{
	pDest->cima++;
	pDest->discos[pDest->cima] = pOrig->discos[pOrig->cima];
	
	pOrig->discos[pOrig->cima] = 0;
	pOrig->cima--;
}

int menu(pPilha *p){
	int x;
	int y;
	
	do{
		printf("\nDe qual torre deseja remover o disco (1:2:3)(0 para sair): \n");
		scanf("%d", &x);
	}while(x < 0 || x > 3);
	
	if(x == 0)
	{
		return x;
	}
	else
	{
		if(p->torres[x-1].cima > -1)
		{
			do
			{
				printf("Para qual torre deseja mover o disco: ");
				scanf("%d", &y);
			} while(y < 1 || y > 3);
			
			if(p->torres[y-1].cima < 0)
			{
				realizeJogada(&p->torres[x-1], &p->torres[y-1]);
			}
			else if(p->torres[x-1].discos[p->torres[x-1].cima] < p->torres[y-1].discos[p->torres[y-1].cima])
			{
				realizeJogada(&p->torres[x-1], &p->torres[y-1]);
			}
			else
			{
				printf("\n\n?Jogada ilegal?");
				getch();
			}			
		}
		else
		{
			printf("\n\n""Sem discos aqui meu caro.");
			getch();
		}		
	}
	
}

void mostraMesa(pPilha *p, int i){
	int c;
	
	c = i-1;
	
	system("cls");
	
	printf("\n\n\n\t 0 \t 0 \t 0 \n");
	printf("\t 0 \t 0 \t 0 \n");
	printf("\t 0 \t 0 \t 0 \n");
	
	
	do
	{
		for(int x = 0; x < 3; x++)
		{
			printf("\t %d ", p->torres[x].discos[c]);
		}
		printf("\n");
		
		c--;
	}
	while(c > -1);
	
}



int main()
{
	pPilha puzzle;
	
	int x;
	
	x = start(&puzzle);
	
	int opt = -1;
	
	do{	
		mostraMesa(&puzzle, x);
		
		opt = menu(&puzzle);
		
	}while(opt != 0);
}

